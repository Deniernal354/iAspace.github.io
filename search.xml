<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Chapter 3]]></title>
    <url>%2F2018%2F01%2F14%2FChapter3%2F</url>
    <content type="text"><![CDATA[第三章Java的基本程序设计结构注意 Java区分大小写 修饰符用于控制程序的部分对这一段代码的访问权限 Java应用程序的全部内容都应该放在类中 类名开头为大写字母，其后可跟字母数字，长度不限，不能使用Java的保留字，源代码文件名必须和公共类名字相同 JavaSE1.4及以上版本规定main()方法必须是public的 Java的每条语句都要以分号(;)结尾 点(.)相当于函数调用 三种注释1//单行注释 1234/* 多行 注释*/ 1234/*** 文档* 注释*/ 注意：多行注释不允许嵌套使用 数据类型Java是强类型语言8种数据类型= 4整数类型 + 2浮点类型 + 1字符类型 + 1布尔类型 长整数后缀加 L/l 十六进制前缀加 0X/0x 二进制前缀加 OB/ob float后缀加 F/f double后缀加 D/d 可为数字增加下划线，增加可读性，编译器自动去除 例：10_000=10000 浮点数值不适用于无法接受误差的计算，原因：浮点数用二进制表示，二进制无法精确表示分数 1/10表示出错或溢出的三个浮点数值：1.正无穷大 2.负无穷大 3.NaN char类型使用单引号,可以表示十六进制的数值,不建议使用，除非UTF-16代码单元转义序列 \u 可以出现在字符常量和字符串之外 例:1public static void main(String\u005B\u005D args) Unicode转义序列会在解析代码前得到处理 注释无法注释\u 整型值和布尔值之间不能相互转换 数据类型转换：char —》int —-》doublebyte —》short —-》int —-》long —-&gt;floatint —-&gt;floatlong—-&gt;double 》为无数据丢失转换，&gt;为有数据丢失转换相对浮点数进行舍入运算，得到最接近的整数int n = (int)Math.round(x) 变量 每个变量都有一个类型 Java保留字不能作为变量名 逐一声明变量可提高代码的可读性 不要使用未初始化的变量变量的声明尽可能靠近变量第一次使用的地方 final指示常量，常量只能被赋值一次，常量名使用后大写 类常量可以在一个类的多个方法中使用，也用关键词static final设置 运算符0/整数会产生一个异常， 0/浮点数=无穷大/NaN 数学函数： Math类中的sqrt方法处理的不是对象，被称为静态方法 Math.pow()进行幂运算 floorMod()方法的目的是解决整数余数问题 Math.PI 表示π 自增自减n++/n--,前缀形式先完成加一或减一，而后缀形式会使用变量原来的值，不要在表达式中使用 三元运算符?: 为三元运算符 例：x&gt;y?x:y 结果为x,y中较大的 位运算符… 枚举变量的取值在一个有限的集合中.可自定义枚举类型,枚举类型包括有限个命名的值.例:12enum Size&#123;SMALL,MEDIUM,LARGE&#125;Size s = Size.SMALL; 字符串 Java语法允许用+号连接两个字符串 任何一个Java对象都可以转化为字符串 把多个字符串放在一起用一个界定符分隔，可以用静态join()方法String all = String.join(&quot;/&quot;,&quot;S&quot;,&quot;M&quot;,&quot;L&quot;); // all is the String &quot;S/M/L&quot; String类对象为不可变字符串。优点：编译器可以让字符串常量共享 可以使用equals()方法检测两个字符串是否相等，equalsIgnoreCase()方法不区分大小写 一定不要使用==运算符检测两个字符串是否相等，只能判定字符串是否放在同一个位置 空字符串和NULL字符串不同 可用StringBuilder构建字符串 输入输出读取输入：构建一个Scanner对象和System.in关联1Scanner in = new Scanner(System.in); nextLine()方法：输入一行 next()方法：输入一个单词 nextInt方法：输入一个整数 因为Scanner的输入是可见的，不适合读取密码 格式化输出可用printf()方法 文件的输入输出读取文件：使用File对象构造一个Scanner对象1Scanner in = new Scanner(Path.get("myfile.txt"),"UTF-8"); 写入文件：构造一个PrintWriter对象1PrintWriter out = new PrintWriter("myfile.txt","UTF-8"); 控制流程条件语句:if(condition) statement12if(a&gt;b) System.out.println(a); 循环语句:while(condition) statement123int a = 0;while(a&gt;0) //while 一次都不运行 a++; do statement while(condition)12345int a = 0;do&#123; a++; &#125;while(a&gt;0) //while 至少运行一次 for(condition) statement12for(int i=1;i&lt;0;i--) //语句三部分应该对同一个计数变量进行初始化,更新,检测System.out.println(i); 多重选择 switch casecase 标签可以是： 类型为:char、short或int的常量表达式 枚举常量 字符串字面量 中断控制变量语句 不带标签的break，用于推出循环 带标签的break,标签放在最外层循坏之前，可通过break跳到带标签的代码块末尾 123456label:&#123; ... if(condition) break label; ...&#125; countinue转移到最内层循环的首部 大数值对整数和浮点不满足，可用java.math包中的BigInteger类和BigDecimal类 数组数组是一种数据结构，用来存储同一类型值的集合，通过一个下标可以访问数组中的每一个值 声明数组 int[] a; 初始化数组 int[] a = new int[10];,int[] a ={1,2,3}; 初始化匿名数组new int[]={1,2,3}; 元素的初始化为0，布尔数组元素的初始化为false，对象数组的元素初始化为NULL 获得元素个数可用array.length，一旦创建不能更改大小 Java允许数组长度为0，new elementType[0], 长度为0!=null 数组排序：Arrays.sort()增强for循环(for each 循环)for(variable:condition) statement12for(int a : array) System.out.println(a); 注：for each循环变量将遍历数组中的每一个元素，而不用下标值 命令行参数main方法中String[] args的参数，这个参数并表明main方法将接受一个字符串数组 多维数组**Java实际上没有多维数组，只有一维数组；多维数组被解释为数组中的数组； ……]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Core Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Chapter 1]]></title>
    <url>%2F2018%2F01%2F13%2FChapter1%2F</url>
    <content type="text"><![CDATA[第一章 Java程序概述Java所具有的特点 简单性 面向对象 网络技能 健壮性 安全性 体系结构中立 可移植性 解释性 高性能 多线程 动态性]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Core Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[结束的旅程]]></title>
    <url>%2F2018%2F01%2F11%2F%E7%BB%93%E6%9D%9F%E7%9A%84%E6%97%85%E9%80%94%2F</url>
    <content type="text"><![CDATA[天气越来越冷，转眼之间2017年都已经结束了… 今天终于结束了近一个月的潍坊驾考之旅；虽说是一场旅行，但却不轻松，这都是过去未完成的任务导致的后果，不过也总算为这趟旅途画上了一个完美的句号。 傍晚踏上了回家的高铁，离开了这个居住了近三年的城市。飞驰的高铁从站台驶出，望着渐渐远去的都市，心里莫名的伤感，一种物是人非的感觉忽然涌上心头，如今大学生活已经结束，同窗的好友也都各奔东西，开始了各自的生活，自己也该向未来迈出下一步了… 结束这件事情之后，我也终于有时间来填Java的大坑了~接下来就是对Java进行重新的复习了，巩固自己这些时间所丢失的东西…]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F11%2F27%2Fhelloworld%2F</url>
    <content type="text"><![CDATA[建立这个博客有一段时间了，一直不知道写点什么; 按照coder的惯例,决定先写一个 hello, world; 然后应该说写什么呢… 聊一下这个博客吧，建立这个博客的初始目的是为了更好的学习和对知识的思考和总结吧; 当然除了学习外，可能写一些自己生活中有感触的事情，或者分享一下自己的心情吧;]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
</search>
